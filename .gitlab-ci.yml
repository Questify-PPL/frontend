default:
  image: node:20.11.0

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
  GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task

stages:
  - build
  - test
  - sonarcloud-check
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

Build:
  stage: build
  before_script:
    - npm install
  script:
    - npm run lint
    - npm run build

Test:
  stage: test
  before_script:
    - npm install
  script:
    - npm run test
    - npm run test:coverage
  artifacts:
    paths:
      - coverage/
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'

Deploy-Staging:
  stage: deploy
  only:
    - staging
  before_script:
    - export NEXTAUTH_SECRET=$NEXTAUTH_SECRET_STAGING
    - export NEXT_PUBLIC_BASE_URL=$NEXT_PUBLIC_BASE_URL_STAGING
    - export NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL_STAGING
  script:
    - npm install --global vercel
    - vercel pull --yes --environment=production --token=$VERCEL_TOKEN_STAGING
    - vercel build --prod --token=$VERCEL_TOKEN_STAGING
    - vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN_STAGING

Deploy-Production:
  stage: deploy
  only:
    - main
  before_script:
    - export NEXTAUTH_SECRET=$NEXTAUTH_SECRET_PROD
    - export NEXT_PUBLIC_BASE_URL=$NEXT_PUBLIC_BASE_URL_PROD
    - export NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL_PROD
  script:
    - npm install --global vercel
    - vercel pull --yes --environment=production --token=$VERCEL_TOKEN
    - vercel build --prod --token=$VERCEL_TOKEN
    - vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN

sonarcloud-check:
  stage: sonarcloud-check
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  dependencies:
    - Test
  allow_failure: true
